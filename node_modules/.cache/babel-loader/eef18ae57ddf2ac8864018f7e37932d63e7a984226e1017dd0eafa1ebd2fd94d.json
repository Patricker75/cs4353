{"ast":null,"code":"var _jsxFileName = \"/home/ian/Desktop/react-front/my-react-app/src/FuelQuoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FuelQuoteForm = () => {\n  _s();\n  // Define state variables to store form data\n  const [inState, setInState] = useState(false);\n  const [clientHistory, setClientHistory] = useState('');\n  const [gallons, setGallons] = useState('');\n  const [profitMargin, setProfitMargin] = useState('');\n  const [profileComplete, setProfileComplete] = useState(false);\n  const [fuelQuotes, setFuelQuotes] = useState([]);\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Collect and log the form data\n    const formData = {\n      inState,\n      clientHistory,\n      gallons: parseFloat(gallons),\n      profitMargin: parseFloat(profitMargin),\n      profileComplete,\n      fuelQuotes: fuelQuotes.map(quote => parseFloat(quote))\n    };\n    console.log(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fuel Quote Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"In State:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: inState,\n          onChange: e => setInState(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Client History:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientHistory,\n          onChange: e => setClientHistory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Gallons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: gallons,\n          onChange: e => setGallons(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Profit Margin:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: profitMargin,\n          onChange: e => setProfitMargin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Profile Complete:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: profileComplete,\n          onChange: e => setProfileComplete(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fuel Quotes (comma-separated, e.g., 1.5,2.0,3.1):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fuelQuotes.join(','),\n          onChange: e => setFuelQuotes(e.target.value.split(','))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FuelQuoteForm, \"ZCBfctERh3i8p7mEo5Vcjb4R5e0=\");\n_c = FuelQuoteForm;\nexport default FuelQuoteForm;\nvar _c;\n$RefreshReg$(_c, \"FuelQuoteForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FuelQuoteForm","_s","inState","setInState","clientHistory","setClientHistory","gallons","setGallons","profitMargin","setProfitMargin","profileComplete","setProfileComplete","fuelQuotes","setFuelQuotes","handleSubmit","e","preventDefault","formData","parseFloat","map","quote","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","onChange","target","value","step","join","split","_c","$RefreshReg$"],"sources":["/home/ian/Desktop/react-front/my-react-app/src/FuelQuoteForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FuelQuoteForm = () => {\n  // Define state variables to store form data\n  const [inState, setInState] = useState(false);\n  const [clientHistory, setClientHistory] = useState('');\n  const [gallons, setGallons] = useState('');\n  const [profitMargin, setProfitMargin] = useState('');\n  const [profileComplete, setProfileComplete] = useState(false);\n  const [fuelQuotes, setFuelQuotes] = useState([]);\n\n  // Function to handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Collect and log the form data\n    const formData = {\n      inState,\n      clientHistory,\n      gallons: parseFloat(gallons),\n      profitMargin: parseFloat(profitMargin),\n      profileComplete,\n      fuelQuotes: fuelQuotes.map((quote) => parseFloat(quote)),\n    };\n\n    console.log(formData);\n  };\n\n  return (\n    <div>\n      <h2>Fuel Quote Form</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          In State:\n          <input\n            type=\"checkbox\"\n            checked={inState}\n            onChange={(e) => setInState(e.target.checked)}\n          />\n        </label>\n\n        <label>\n          Client History:\n          <input\n            type=\"text\"\n            value={clientHistory}\n            onChange={(e) => setClientHistory(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Gallons:\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={gallons}\n            onChange={(e) => setGallons(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Profit Margin:\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            value={profitMargin}\n            onChange={(e) => setProfitMargin(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Profile Complete:\n          <input\n            type=\"checkbox\"\n            checked={profileComplete}\n            onChange={(e) => setProfileComplete(e.target.checked)}\n          />\n        </label>\n\n        <label>\n          Fuel Quotes (comma-separated, e.g., 1.5,2.0,3.1):\n          <input\n            type=\"text\"\n            value={fuelQuotes.join(',')}\n            onChange={(e) => setFuelQuotes(e.target.value.split(','))}\n          />\n        </label>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FuelQuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}