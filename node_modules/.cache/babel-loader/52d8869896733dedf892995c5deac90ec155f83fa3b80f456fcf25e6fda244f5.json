{"ast":null,"code":"var _jsxFileName = \"/home/ian/Desktop/react-front/my-react-app/src/FuelQuoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourComponent() {\n  _s();\n  const [inState, setInState] = useState('true'); // 'true' or 'false'\n  const [clientHistory, setClientHistory] = useState([]); // Array of past client history items\n  const [gallons, setGallons] = useState(0); // Integer\n  const [profitMargin, setProfitMargin] = useState(0.0); // Float\n  const [profileComplete] = useState(true); // Internal use, not rendered on the page\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // You can handle form submission logic here\n    // For example, you can send the form data to a server or perform client-side validation.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"In State:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: inState,\n          onChange: e => setInState(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Client History:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: clientHistory.map((historyItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: historyItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Gallons:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Gallons\",\n          value: gallons,\n          onChange: e => setGallons(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Profit Margin:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Profit Margin\",\n          value: profitMargin,\n          onChange: e => setProfitMargin(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(YourComponent, \"KfNY1vIRFFZ2V0V0r+xh4PKpAAI=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourComponent","_s","inState","setInState","clientHistory","setClientHistory","gallons","setGallons","profitMargin","setProfitMargin","profileComplete","handleSubmit","e","preventDefault","onSubmit","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","historyItem","index","type","placeholder","parseInt","step","parseFloat","_c","$RefreshReg$"],"sources":["/home/ian/Desktop/react-front/my-react-app/src/FuelQuoteForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction YourComponent() {\n  const [inState, setInState] = useState('true'); // 'true' or 'false'\n  const [clientHistory, setClientHistory] = useState([]); // Array of past client history items\n  const [gallons, setGallons] = useState(0); // Integer\n  const [profitMargin, setProfitMargin] = useState(0.0); // Float\n  const [profileComplete] = useState(true); // Internal use, not rendered on the page\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // You can handle form submission logic here\n    // For example, you can send the form data to a server or perform client-side validation.\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>\n          In State:\n          <select value={inState} onChange={(e) => setInState(e.target.value)}>\n            <option value=\"true\">True</option>\n            <option value=\"false\">False</option>\n          </select>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Client History:\n          <ul>\n            {clientHistory.map((historyItem, index) => (\n              <li key={index}>{historyItem}</li>\n            ))}\n          </ul>\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Gallons:\n          <input\n            type=\"number\"\n            placeholder=\"Gallons\"\n            value={gallons}\n            onChange={(e) => setGallons(parseInt(e.target.value))}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label>\n          Profit Margin:\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            placeholder=\"Profit Margin\"\n            value={profitMargin}\n            onChange={(e) => setProfitMargin(parseFloat(e.target.value))}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default YourComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}